apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xservices.aws.platformref.upbound.io
  labels:
    plan: full
    provider: helm
spec:
  writeConnectionSecretsToNamespace: upbound-system
  compositeTypeRef:
    apiVersion: aws.platformref.upbound.io/v1alpha1
    kind: XServices
  resources:
    - name: releasePrometheus
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          rollbackLimit: 3
          forProvider:
            namespace: operators
            chart:
              # from https://github.com/prometheus-community/helm-charts
              # Note that default values are overridden by the patches below.
              name: kube-prometheus-stack
              repository: https://prometheus-community.github.io/helm-charts
              version: "41.4.1"
            values: {}
      patches:
        # All Helm releases derive their labels and annotations from the XR.
        - fromFieldPath: metadata.labels
          toFieldPath: metadata.labels
        - fromFieldPath: metadata.annotations
          toFieldPath: metadata.annotations
        # All Helm releases derive the ProviderConfig to use from the XR.
        - fromFieldPath: spec.providerConfigRef.name
          toFieldPath: spec.providerConfigRef.name
        # Derive the Prometheus operator image and tag from the XR.
        - fromFieldPath: spec.operators.prometheus.version
          toFieldPath: spec.forProvider.chart.version
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: status.releaseNamePrometheus

    - name: release-promotheus-uses-xeks
      base:
        apiVersion: apiextensions.crossplane.io/v1alpha1
        kind: Usage
        spec:
          of:
            apiVersion: aws.platformref.upbound.io/v1alpha1
            kind: XEKS
          by:
            apiVersion: helm.crossplane.io/v1beta1
            kind: Release
      patches:
        - fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.of.resourceSelector.matchLabels[crossplane.io/claim-name]
        - fromFieldPath: status.releaseNamePrometheus
          toFieldPath: spec.by.resourceRef.name

    - name: irsaCrossplane
      base:
        apiVersion: aws.platformref.upbound.io/v1alpha1
        kind: XIRSA
        spec:
          parameters:
            condition: StringEquals
            policyDocument: |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "ecr:ListTagsForResource",
                                "ecr:ListImages",
                                "ecr:GetRepositoryPolicy",
                                "ecr:GetLifecyclePolicyPreview",
                                "ecr:GetLifecyclePolicy",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:GetAuthorizationToken",
                                "ecr:DescribeRepositories",
                                "ecr:DescribeImages",
                                "ecr:DescribeImageScanFindings",
                                "ecr:BatchGetImage",
                                "ecr:BatchCheckLayerAvailability"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ]
                }
            serviceAccount:
              name: crossplane
              namespace: upbound-system
      patches:
        - fromFieldPath: spec.providerConfigRef.name
          toFieldPath: metadata.name
          transforms:
            - type: match
              match:
                patterns:
                  - type: regexp
                    regexp: '.*'
                    result: irsa-crossplane
        - type: ToCompositeFieldPath
          fromFieldPath: status.roleArn
          toFieldPath: status.roleArn
          policy:
            fromFieldPath: Optional
        - fromFieldPath: spec.operators.universal-crossplane.clusterRef
          toFieldPath: spec.parameters.clusterRef.id

    - name: releaseUXP
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          rollbackLimit: 3
          forProvider:
            namespace: upbound-system
            chart:
              # from https://github.com/upbound/universal-crossplane
              # Note that default values are overridden by the patches below.
              name: universal-crossplane
              repository: https://charts.upbound.io/stable
            values: {}
      patches:
        # All Helm releases derive their labels and annotations from the XR.
        - fromFieldPath: metadata.labels
          toFieldPath: metadata.labels
        - fromFieldPath: metadata.annotations
          toFieldPath: metadata.annotations
        # All Helm releases derive the ProviderConfig to use from the XR.
        - fromFieldPath: spec.providerConfigRef.name
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: spec.operators.universal-crossplane.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: status.roleArn
          toFieldPath: spec.forProvider.values.serviceAccount.customAnnotations[eks.amazonaws.com/role-arn]
          policy:
            fromFieldPath: Required
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: status.releaseNameUXP

    - name: release-uxp-uses-xeks
      base:
        apiVersion: apiextensions.crossplane.io/v1alpha1
        kind: Usage
        spec:
          of:
            apiVersion: aws.platformref.upbound.io/v1alpha1
            kind: XEKS
          by:
            apiVersion: helm.crossplane.io/v1beta1
            kind: Release
      patches:
        - fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.of.resourceSelector.matchLabels[crossplane.io/claim-name]
        - fromFieldPath: status.releaseNameUXP
          toFieldPath: spec.by.resourceRef.name
